
/**
 * 【题目描述】请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
 * 例如，字符串”+100”,”5e2”,”-123”,”3.1416”和”-1E-16”都表示数值。 但是”12e”,”1a3.14”,”1.2.3”,”+-5”和”12e+4.3”都不是。
 */

/**
 * 【解题思路】
 * //1. 合法的数值可以表示为A[.[B]][e|EC]或者.B[e|EC].
 * //2. 其中A为整数部分，B为小数部分，C为e|E的指数部分。
 * 在纯小数的时候，可能没有整数部分，如小数.123等于0.123，是合法的。所以A部分不是必须的。
 * //3. A和C都是整数，可以带符号，也可不带。B是一个无符号整数。
 */
public class A20_isnumeric {
    private int index;
    public boolean isNumeric(char[] str){

        if(str == null || str.length == 0)
            return false;
        index = 0;
        boolean flag = scanInteger(str);

        if(index < str.length && str[index] == '.'){
            index++;
            /**
             * a. 之所以使用||，而没有使用&&的原因。小数可以没有整数部分，如.123等于0.123；
             * 小数点后面可以没有数字，如233.等于233.0；当然，小数点前后都可以有数字，如1.123；
             */
            flag = scanUnInteger(str) || flag;
        }
        if(index < str.length && (str[index] == 'e' || str[index] == 'E')){
            index ++;
            flag = scanInteger(str);
        }
        return flag && (index == str.length);
    }

    private boolean scanInteger(char[] str) {
        if(index < str.length && (str[index] == '+' || str[index] == '-'))
            index++;
        return scanUnInteger(str);
    }

    private boolean scanUnInteger(char[] str) {
        int oldIndex = index;
        while (index < str.length && str[index] >= '0' && str[index] <= '9')
            index++;
        return index > oldIndex;
    }

}
