/**
 * // 面试题8：二叉树的下一个结点
 * // 题目：给定一棵二叉树和其中的一个结点，如何找出中序遍历顺序的下一个结点？
 * // 树中的结点除了有两个分别指向左右子结点的指针以外，还有一个指向父结点的指针。
 */

class TreeLinkNode {
    int val;
    TreeLinkNode left = null;
    TreeLinkNode right = null;
    TreeLinkNode next = null;

    TreeLinkNode(int val) {
        this.val = val;
    }
}

public class Solution {
    public TreeLinkNode GetNext(TreeLinkNode pNode)
    {

        if(pNode == null)
            return null;

        if(pNode.right != null)
        {
            pNode = pNode.right;
            while(pNode.left != null){
                pNode = pNode.left;
            }
            return pNode;
        }

        while (pNode.next != null){
            /**
             * 注意这个地方判断和 赋值如果反过来就会导致错误
             */
            if(pNode == pNode.next.left)
                return pNode.next;
            pNode = pNode.next;

        }

        return null;

    }
}


/**
 测试代码
 */
//            8
//        6      10
//       5 7    9  11



//            5
//          4
//        3
//      2



//        2
//         3
//          4
//           5
