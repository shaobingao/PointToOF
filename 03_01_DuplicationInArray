package com.pointTo;// 面试题3（一）：找出数组中重复的数字
// 题目：在一个长度为n的数组里的所有数字都在0到n-1的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，
// 也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。例如，如果输入长度为7的数组{2, 3, 1, 0, 2, 5, 3}，
// 那么对应的输出是重复的数字2或者3。

/*
1、判断输入数组有无元素非法
2、从头扫到尾，只要当前元素值与下标不同，就做一次判断,numbers[i]与numbers[numbers[i]]，相等就认为找到了
重复元素，返回true,否则就交换两者，继续循环。直到最后还没找到认为没找到重复元素，返回false
*/
public class A03_01_DuplicationInArray {
    public boolean duplicate(int numbers[],int length,int [] duplication) {

        int temp;
        if(numbers == null || numbers.length <= 0)
        {
            return  false;
        }
        //此处要注意判断输入数据的问题 判断是否非法
        for (int i = 0; i < length ; i++)
        {
            if(numbers[i] < 0 || numbers[i] > length -1 )
                return false;
        }

            for(int i = 0; i < numbers.length; i++)
            {
                while(numbers[i] != i)
                {
                    if(numbers[i] == numbers[numbers[i]])
                    {
//注意要返回来重复的数字
                        duplication[0] = numbers[i];
                        return true;
                    }
                    else{
//         注意此处，原来的交换方法导致程序错误。注意最后一个 numbers[numbers[i]] = temp;应改为numbers[temp] = temp;
//                        temp = numbers[i];
//                        numbers[i] = numbers[numbers[i]];
//                        numbers[numbers[i]] = temp;

                        temp = numbers[i];
                        numbers[i] = numbers[numbers[i]];
                        numbers[temp] = temp;

                    }
                }
            }

        return false;

    }

}
