import java.util.Stack;

/**
 * 用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。
 */

/**
 * 用两个栈实现一个队列的功能?要求给出算法和思路!
 * <分析>：
 * 入队：将元素进栈A
 * 出队：判断栈B是否为空，如果为空，则将栈A中所有元素pop，并push进栈B，栈B出栈；
 *  如果不为空，栈B直接出栈。
 */
public class A09_QueueWithTwoStacks {
    Stack<Integer> stack1 = new Stack<Integer>();
    Stack<Integer> stack2 = new Stack<Integer>();

    public void push(int node) {
        stack1.push(node);
    }

    public int pop() {
        if(stack1.isEmpty()&&stack2.isEmpty())
            throw new RuntimeException("Queue is empty!");
        if(stack2.isEmpty()){
            while(!stack1.isEmpty()){
                stack2.push(stack1.pop());
            }
        }
        return stack2.pop();

    }

    public static void main(String[] args) {
        A09_QueueWithTwoStacks sq = new A09_QueueWithTwoStacks();
        sq.push(1);
        sq.push(3);
        sq.push(5);
        sq.push(4);
        sq.push(2);

        System.out.println(sq.pop());
        System.out.println(sq.pop());

        sq.push(7);
        System.out.println(sq.pop());
    }

}


