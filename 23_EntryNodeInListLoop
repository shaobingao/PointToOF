public class A23_EntryNodeOfLoop {
    /**
     * 一个链表中包含环，请找出该链表的环的入口结点。
     * 此问题包含两个步骤：
     * （1）判断链表中是否有环
     * （2）找出环
     */

    /**
     * 一、
     *
     * 1）选择快慢指针，让快指针每次走两步，慢指针每次走一步，若是单链表中有环的话，
     * 那么两个指针会相遇，即指向的相同的节点的值相等来判断。
     *
     * 2）当相遇的时候，慢指针在环中走了k步，设环之外的部分长为x,环的长度为n,则快指针一共走了 x+m*n步，
     * （m为快指针在环中走的圈数），慢指针一共走了x+k步，因为快指针的速度是慢指针的两倍。
     * 那么可以得到2(x+k)=x+m*n+k;得到x为m*n-k ,慢指针在圈中还剩下的步数n-k;
     *
     * 二、
     *
     * 让快指针从头开始，两个指针每次都走一步，当快指针走了想x(m*n-k)步的时候，到达环的入口，
     * 慢指针在圈中走m-1圈加k步的时候，也到达环入口那个节点，两个指针再次相遇，此刻的节点就是环的入口的节点。
     */
    private class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}

    public ListNode EntryNodeOfLoop(ListNode pHead) {
        if( pHead == null|| pHead.next == null)
            return null;
        ListNode p1 = pHead;
        ListNode p2 = pHead;
        while (p2 != null && p2.next != null){
            p1 = p1.next;
            p2 = p2.next.next;
            if(p1 == p2){
                p2 = pHead;
                while (p1 != p2){
                    p2 = p2.next;
                    p1 = p1.next;
                }
                if(p1 == p2)
                    return p1;
            }
        }
        return null;

    }
}
