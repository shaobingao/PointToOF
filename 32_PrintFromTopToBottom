
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

/**
 public class TreeNode {
 int val = 0;
 TreeNode left = null;
 TreeNode right = null;

 public TreeNode(int val) {
 this.val = val;

 }

 }
 */

/**
 * 题目：从上往下打印出二叉树的每个节点，同层节点从左至右打印。
 */

/**
 * 思路：二叉树的层次遍历，借助一个队列就可以了
 */
public class A32_PrintFromTopToBottom {
    public ArrayList<Integer> PrintFromTopToBottom(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<>();
        if(root == null)
            return result;
        /**
         * 注意，此处需要一个队列来存储，用了LinkedList来表示队列，用queue.offer来添加元素
         */
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        while (!queue.isEmpty()){
            TreeNode node = queue.poll();
            if(node.left != null)
                queue.offer(node.left);
            if(node.right != null)
                queue.offer(node.right);

            result.add(node.val);
        }
        return result;

    }
}
